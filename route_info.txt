// RECORD ROUTES
create-records                  router.post('/api/v1/records',  verifyMerchant, loginRequired, createRecord); // DONE
retrieve-all-records            router.get('/api/v1/records', loginRequired, getAllRecords); // DONE 
update-records                  router.put('/api/v1/records/:record_id', verifyMerchant, loginRequired, updateRecordById) // DONE

// ORDER ROUTES
create-order                    router.post('/api/v1/records/:record_id/orders', loginRequired, createOrder)// DONE
retrieve-single-orders          router.get('/api/v1/orders/:order_id', loginRequired, getOrder) // DONE
retrieve-all-orders             router.get('/api/v1/orders', loginRequired, getAllOrders) // DONE
update-orders                   router.put('/api/v1/orders/:order_id', loginRequired, updateOrderById) // DONE MAKE PRIVATE

// MERCHANT ROUTES
retrieve-all-merchant-records   router.get('/api/v1/merchants/:merchant_id/records', loginRequired, getAllMerchantRecords) // get all records by merchant
retrieve-all-merchant-orders    router.get('/api/v1/merchants/:merchant_id/orders', loginRequired, createdBy, getAllMerchantOrders) // get all orders by 
retrieve-merchant-info          router.get('/api/v1/merchants/:merchant_id', loginRequired, getMerchant) // get merchant information 
update-merchant-account         router.put('/api/v1/merchants/:merchant_id', loginRequired, updateMerchantById) // update merchant account information PRIVATE
delete-record                   router.delete('/api/v1/merchants/:merchant_id/records/:record_id', loginRequired, createdBy, deleteRecord) // delete record PRIVATE

// USER ROUTES
retrieve-user-info              router.get('/api/v1/users/:user_id', loginRequired, getUserInfo) // get user info PRIVATE
update-user                     router.put('/api/v1/users/:user_id', loginRequired, updateUserById) // update user info PRIVATE
retrieve-user-orders            router.get('/api/v1/users/:user_id/orders', loginRequired, getUserOrders) // get orders by user PRIVATE
cancel-orders                   router.delete('/api/v1/users/:user_id/orders/:order_id', loginRequired, orderedBy, cancelOrder) // delete order for user


// AUTHORIZATION ROUTES / USER ROUTES
router.post('/auth/register/user', registerUser)
router.post('/auth/login/user', login)


// AUTHORIZATION ROUTES / MERCHANT
router.post('/auth/register/merchant', registerMerchant)
router.post('/auth/login/merchant', loginMerchant)
